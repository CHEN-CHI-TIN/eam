name: ${PROJECT_NAME}
services:
    # formatter:
    #     build:
    #         context: ${PWD}/devtool/formatter/
    #         dockerfile: Dockerfile
    #     volumes:
    #         - ${PWD}/:/app/main/
    #     environment:
    #         - NODE_OPTIONS=--max-old-space-size=8192
    #     restart: always
    
    host-portal:
        build:
            context: ${PWD}/main/host-portal/
            dockerfile: Dockerfile
            args:
                IMG_VER_BUILD_NODE: ${IMG_VER_BUILD_NODE}
                IMG_VER_RUNTIME_NODE: ${IMG_VER_BUILD_NODE}
        ports:
            - ${HOST_PORT}:${HOST_PORT}
        networks:
            - remote
        volumes:
            - ${PWD}/main/host-portal/:/app/
        environment:
            - ENV=${ENV}
        restart: always
        command: >
            bash -c "
                if [ "$ENV" = "prod" ]; then \
                    pnpm run build && pnpm run start; \
                else \
                    pnpm run dev; \
                fi
            "
        

    remote-01:
        build:
            context: ${PWD}/main/remote/${REMOTE_01_NAME}
            dockerfile: Dockerfile
            args:
                IMG_VER_BUILD_NODE: ${IMG_VER_BUILD_NODE}
                IMG_VER_RUNTIME_NODE: ${IMG_VER_RUNTIME_NODE}
        ports:
            - ${REMOTE_01_PORT}:${REMOTE_01_PORT}
        networks:
            - remote
        volumes:
            - ${PWD}/main/remote/${REMOTE_01_NAME}/:/app/
        environment:
            - ENV=${ENV}
        restart: always
        # command: tail -f /dev/null

    # database-01-${DATABASE_01_NAME}:
    #     build:
    #         context: ${PWD}/main/database/${DATABASE_01_NAME}
    #         dockerfile: Dockerfile
    #     networks:
    #         - host-network
    #     ports:
    #         - ${PORT_DATABASE_01}:3000
    #     volumes:
    #         - ${PWD}/:/app/main/
    #     environment:
    #         - NODE_OPTIONS=--max-old-space-size=8192
    #     restart: always

# volumes:
#     database-${DATABASE_01_NAME}:

#! 主機一(入口)
networks:
    remote:
        driver: bridge
